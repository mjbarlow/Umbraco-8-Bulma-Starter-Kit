@using ContentModels = U8StarterKit.Web.Models.Umbraco;
@using U8StarterKit.Web.Extensions

@inherits Umbraco.Web.Macros.PartialViewMacroPage
@{
    var startNodeId = Model.MacroParameters["startNodeId"] != null ? Model.MacroParameters["startNodeId"] : Model.Content.Id;
    var numberOfPosts = 3;
    if (Model.MacroParameters["numberOfPosts"] != null)
    {
        int.TryParse((string)Model.MacroParameters["numberOfPosts"], out numberOfPosts);
    }
}

@if (startNodeId != null)
{
    @* Get the starting page *@
    var startNode = Umbraco.Content(startNodeId);
    if (startNode == null)
    {
        <div class="blogposts">
            <h1>There are no posts at this time, try again later.</h1>
        </div>
        return;
    }

    //Gets all blogposts to calculate pages
    var blogposts = startNode.Children.OrderBy(x => x.CreateDate).ToList();
    var pageCount = (int)Math.Ceiling((double)blogposts.Count / (double)numberOfPosts);
    //gets the page from the querystring and sets it to one if it is out of range
    var page = 1;
    if (!string.IsNullOrEmpty(Request.QueryString["page"]))
    {
        int.TryParse(Request.QueryString["page"], out page);
        if (page <= 0 || page > pageCount)
        {
            page = 1;
        }
    }
    //Gets the blogposts for the current page
    var pagedBlogposts = blogposts.Skip((page - 1) * numberOfPosts).Take(numberOfPosts).ToList();

    if (pagedBlogposts.Count > 0)
    {
    
                foreach (ContentModels.Blogpost post in pagedBlogposts)
                {
                    <div class="card has-large-spacing-bottom">
                        @if (post.PostImage.HasValue())
                        {
                            <div class="image-card">
                            <div class="image has-spacing image is-3by1">
                                <img src="@post.PostImage.Url" class="is-background"/>
                            </div>
                            </div>
                        }
                        <div class="card-content">
                            <div class="content">
                                <h3 class="title">@post.PageTitle</h3>
                                <p class="subtitle">@post.CreateDate.ToShortDateString()</p>
                                <div class="has-spacing-bottom">
                                    @Html.Partial("~/Views/Partials/CategoryLinks.cshtml", post.Categories)
                                </div>
                                <p>@post.Excerpt</p>
                                <a href="@post.Url" class="button is-link">Read more</a>
                            </div>
                        </div>
                    </div>
                }
   
    }

    if (blogposts.Count > numberOfPosts)
    {
        <div class="pagination">
            <nav class="nav-bar nav-bar--center">
                @if (page <= 1)
                {
                    <span class="nav-link nav-link--black nav-link--disabled">Prev</span>
                }
                else
                {
                    <a class="nav-link nav-link--black" href="@(Model.Content.Url + "?page=" + (page - 1))">Prev</a>
                }

                @for (int i = 1; i <= pageCount; i++)
                {
                    <a class="nav-link nav-link--black @(page == i ? " nav-link--active" : null)" href="@(Model.Content.Url + "?page=" + i)">@i</a>
                }
                @if (page == pageCount)
                {
                    <span class="nav-link nav-link--black nav-link--disabled">Next</span>
                }
                else
                {
                    <a class="nav-link nav-link--black" href="@(Model.Content.Url + "?page=" + (page + 1))">Next</a>
                }

            </nav>
        </div>
    }
}

