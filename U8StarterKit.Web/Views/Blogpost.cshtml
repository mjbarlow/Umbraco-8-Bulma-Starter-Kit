@inherits UmbracoViewPage<Blogpost>
@using Umbraco.Web.PublishedModels
@using U8StarterKit.Web.Extensions
@{
    Layout = "master.cshtml";
    var sideNav = Model.NestedContent.Where(x => x.ContentType.Alias == "titleComponent");
}

<section id="hero" class="image has-spacing image is-3by1">
    @if (Model.PostImage.HasValue())
    {
        <img src="@Model.PostImage.Url" class="is-background" />
    }
</section>
<section class="hero is-dark">
    <div class="hero-body">
        <div class="container">
            <div class="column is-8-tablet is-offset-2 is-paddingless">
                @if (Model.HeaderTitle.HasValue())
                {
                    <h1 class="title is-2">@Model.HeaderTitle</h1>
                }
                <h2 class="subtitle is-4">@Model.CreateDate.ToShortDateString()</h2>
                @if (Model.Categories.HasValue())
                {
                    <div class="has-spacing-bottom">
                        @foreach (var category in Model.Categories)
                        {
                            <a class="button is-dark is-inverted is-outlined" href="@(String.Format(Model.Parent.Url + "?tag={0}", category))">@category</a>
                        }
                    </div>
                }
                @if (Model.HeaderSubtitle.HasValue())
                {
                    <h2 class="subtitle is-size-4">@Model.HeaderSubtitle</h2>
                }
            </div>
        </div>
    </div>
</section>
<section class="section has-spacing section-gray">
    <div class="container">
        <div class="columns">
            @if (sideNav.Any())
            {
                <div class="column is-2-tablet">
                    <aside class="menu">
                        <p class="menu-label">
                            <strong>Contents</strong>
                        </p>
                        <ul class="menu-list">
                            @foreach (var titleSection in sideNav)
                            {
                                var navItem = titleSection as TitleComponent;
                                <li><a href="#@navItem.Title.ToUrlSegment()">@navItem.Title</a></li>
                            }
                        </ul>
                    </aside>
                </div>
            }
            <div class="column is-large is-8-tablet @(sideNav.Any() ? "" : "is-offset-2")">
                <article>
                    <div class="content is-large">
                        @Html.Partial("~/Views/Partials/Renderers/RenderContent.cshtml", Model.NestedContent)
                    </div>
                </article>
            </div>
        </div>
    </div>
</section>