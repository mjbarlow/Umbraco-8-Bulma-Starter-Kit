@inherits Umbraco.Web.Mvc.UmbracoViewPage<Markdown>
@using U8StarterKit.Web.Extensions
@using HtmlAgilityPack


@if (Model.Content.HasValue())
{
    var htmlDoc = new HtmlAgilityPack.HtmlDocument();
    htmlDoc.LoadHtml(Model.Content.ToString());

    // H2s

    var html1 = htmlDoc.DocumentNode.OuterHtml;

    var h2s = htmlDoc.DocumentNode.Descendants("h2").ToList();

    foreach (var h2 in h2s)
    {

        h2.SetAttributeValue("id", h2.InnerText.ToUrlSegment());
        h2.SetAttributeValue("class", "title is-size-3 is-85-percent");

        var nextNode = h2.NextSibling?.NextSibling;
        if (nextNode != null && nextNode.Name == "p")
        {
            nextNode.SetAttributeValue("class", "subtitle is-size-4 is-85-percent");
        }
    };

    // code

    var codes = htmlDoc.DocumentNode.Descendants("code");

    foreach (var code in codes.ToList())
    {
        var pre = HtmlNode.CreateNode($"<pre>{code.InnerText}</pre>");
        code.ParentNode.ReplaceChild(pre, code);
        code.Remove();
    }

    // images

    var images = htmlDoc.DocumentNode.Descendants("img");

    foreach (var image in images.ToList())
    {
        var nextNode = image.NextSibling;

        image.SetAttributeValue("class", "is-background");
        image.SetAttributeValue("srcset", RazorHelper.SetImageSrcSet(image.GetAttributeValue("src", "")));
        image.Attributes.Remove("src");

        var parentNode = image.ParentNode;
        var container = HtmlNode.CreateNode(
            $"<div class=\"columns has-spacing-top\">" +
                $"<div class=\"column\">" +
                    $"<div class=\"image is-2by1 has-spacing-bottom\">" +
                        $"{image.OuterHtml}" +
                    $"</div>" +
                $"</div>" +
                 $"<div class=\"column\">" +
                    $"<h3 class=\"title is-size-4 \">" +
                        image.GetAttributeValue("alt", "") +
                    $"</h3>" +
                    $"<p class=\"subtitle is-size-5\">" + image.GetAttributeValue("title", "") + "</p>" +
                $"</div>" +
            $"</div>");

        parentNode.ReplaceChild(container, image);
    }

    var html = new HtmlString(htmlDoc.DocumentNode.OuterHtml);
    @html
}
